--1. 급여가 회사평균 급여보다 적게 받고 있는 사원을 매니저로 가지고 있는 사원들의 이름과 급여 그리고 부서이름을 조회.
--(SUBQUERY, JOIN)

SELECT EMP.LAST_NAME, EMP.SALARY, D.DEPARTMENT_NAME 
FROM EMPLOYEES EMP, EMPLOYEES MAN, DEPARTMENTS D
WHERE MAN.SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES)
AND EMP.MANAGER_ID = MAN.EMPLOYEE_ID AND MAN.DEPARTMENT_ID = D.DEPARTMENT_ID;


--2. 입사년도가 2007년 이후인 사람들이 소속되어 있는 부서에서 같이 근무하고 있는 사원들의 정보를 사원의 이름과 입사일자
--   그리고 부서 이름을 조회(TO_CHAR(HIRE_DATE, 'YYYY') >= '2007' SUBQUERY, JOIN)

SELECT D.DEPARTMENT_NAME, E.LAST_NAME, E.HIRE_DATE, E.DEPARTMENT_ID
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID IN (SELECT DISTINCT DEPARTMENT_ID FROM EMPLOYEES WHERE HIRE_DATE > TO_DATE('2007', 'YYYY'))
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY E.DEPARTMENT_ID;


--3. 'Seattle' city에서 근무하고 있는 사원들의 평균 급여보다 많은 급여를 받고 있고 다른 사원의 매니저 역할을 하고 있는 사원조회.
--      (LOCATION TABLE에서 CITY정보, 두 개의 SUBQUERY)

SELECT DISTINCT M.LAST_NAME, M.SALARY
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.MANAGER_ID=M.EMPLOYEE_ID
AND M.SALARY > (SELECT AVG(E.SALARY) FROM DEPARTMENTS D, EMPLOYEES E
                                WHERE D.LOCATION_ID = (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY='Seattle'));


--4. .사원 중에 현재의 JOB_ID가 과거의 JOB_ID와 같은 사원을 조회(EMPLOYEES TALBE, JOB_HISTORY)
--(INTERSECT)

SELECT EMPLOYEE_ID, JOB_ID FROM JOB_HISTORY
INTERSECT
SELECT EMPLOYEE_ID, JOB_ID FROM EMPLOYEES;


--5. 회사에 입사한 이후 한 번도 직무나 부서를 변경한 적이 없는 사원을 조회.
--(EMPLOYEES TABLE, JOB_HISTROY TABLE, MINUS)

SELECT EMPLOYEE_ID FROM EMPLOYEES
MINUS
SELECT EMPLOYEE_ID FROM JOB_HISTORY;


