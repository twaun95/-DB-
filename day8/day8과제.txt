1. <ORDER BY>
SELECT LAST_NAME, SALARY, COMMISSION_PCT
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL
ORDER BY SALARY DESC, COMMISSION_PCT DESC;

2. <IN>
SELECT LAST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE JOB_ID IN('SA_REP', 'ST_CLERK') AND SALARY NOT IN (2500, 3500, 7000);

3. <특정 문자열 포함>
SELECT LAST_NAME, LENGTH(LAST_NAME)
FROM EMPLOYEES
WHERE LAST_NAME LIKE 'J%' OR LAST_NAME LIKE 'A%' OR LAST_NAME LIKE 'M%';

4. <날짜, 주단위로 바꾸기> 
SELECT LAST_NAME, TRUNC((SYSDATE-HIRE_DATE)/7) TENURE
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90
ORDER BY TENURE DESC;

5. <TO_CHAR을 이용한 요일 설정>
SELECT LAST_NAME, HIRE_DATE, TO_CHAR(HIRE_DATE, 'DAY') DAY
FROM EMPLOYEES
ORDER BY TO_CHAR(HIRE_DATE -1, 'D'); --'D'는 요일을 사용, -1은 일요일부터시작, -1은 월요일을 나타내기 위함.

6. <CASE 사용>
SELECT LAST_NAME, HIRE_DATE, SYSDATE,
    (CASE WHEN MONTHS_BETWEEN(SYSDATE, HIRE_DATE)/12 > =15 THEN '15 YEARS OF SERVICE'
                WHEN MONTHS_BETWEEN(SYSDATE, HIRE_DATE)/12 > =10 THEN '10 YEARS OF SERVICE'
                WHEN MONTHS_BETWEEN(SYSDATE, HIRE_DATE)/12 > =5 THEN '5 YEARS OF SERVICE'
                ELSE 'MAYBE NEXT YEAR!' END) "AWARDS"
FROM EMPLOYEES;

7. <GROUP 절> <순서 : WHERE -> GROUP -> HAVING -> ORDER>
SELECT MANAGER_ID, MIN(SALARY)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
GROUP BY MANAGER_ID
HAVING MIN(SALARY) > 6000
ORDER BY MIN(SALARY) DESC;

8. <JOIN 2가지 방법.>
SELECT E.LAST_NAME EMPLOYEE, E.EMPLOYEE_ID EMP#, M.LAST_NAME MANAGER, M.EMPLOYEE_ID MGR#
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.MANAGER_ID = M.EMPLOYEE_ID;

SELECT E.LAST_NAME EMPLOYEE, E.EMPLOYEE_ID EMP#, M.LAST_NAME MANAGER, M.EMPLOYEE_ID MGR#
FROM EMPLOYEES E JOIN EMPLOYEES M
ON E.MANAGER_ID = M.EMPLOYEE_ID;

9. <SUBQUERY - ALL, ANY 사용>
SELECT LAST_NAME, JOB_ID, SALARY
FROM EMPLOYEES
WHERE SALARY >ALL (SELECT SALARY FROM EMPLOYEES WHERE JOB_ID = 'SA_MAN')
ORDER BY SALARY DESC;


10. <2개의 SUBQUERY>
SELECT EMPLOYEE_ID, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE DEPARTMENT_ID =ANY (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME LIKE '%u%')
AND SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES);